# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  label:
    types: [created, edited, deleted]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test with code coverage
        run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

      - name: Generate code coverage report
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:./coverage/**/coverage.cobertura.xml -targetdir:./coverage/report -reporttypes:Html,Cobertura

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: ./coverage/report
          retention-days: 7

      - name: Upload coverage XML for summary
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: ./coverage/report/Cobertura.xml
          retention-days: 1

  coverage-summary:
    name: Generate Coverage Summary
    needs: ${{ github.event_name != 'label' && 'build' || '' }}
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download coverage XML
        uses: actions/download-artifact@v4
        with:
          name: coverage-xml
          path: ./coverage-xml

      - name: Create code coverage summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ./coverage-xml/Cobertura.xml
          badge: true
          fail_below_min: true
          thresholds: 80 90
          format: markdown
          output: both

      - name: Write to Job Summary
        run: cat ${{ github.workspace }}/code-coverage-results.md >> $GITHUB_STEP_SUMMARY
